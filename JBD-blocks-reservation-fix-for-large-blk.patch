[RFC 2/2] JBD: blocks reservation fix for large block support

From: Mingming Cao <cmm@us.ibm.com>

The blocks per page could be less or quals to 1 with the large
block support in VM. The patch fixed the way to calculate the
number of blocks to reserve in journal in the case blocksize > pagesize.

Signed-off-by: Mingming Cao <cmm@us.ibm.com>
---

 fs/jbd/journal.c  |    7 ++++++-
 fs/jbd2/journal.c |    7 ++++++-
 2 files changed, 12 insertions(+), 2 deletions(-)


diff --git a/fs/jbd/journal.c b/fs/jbd/journal.c
index e868033..23c3303 100644
--- a/fs/jbd/journal.c
+++ b/fs/jbd/journal.c
@@ -1602,7 +1602,12 @@ void journal_ack_err(journal_t *journal)
 
 int journal_blocks_per_page(struct inode *inode)
 {
-	return 1 << (PAGE_CACHE_SHIFT - inode->i_sb->s_blocksize_bits);
+	int bits = PAGE_CACHE_SHIFT - inode->i_sb->s_blocksize_bits;
+
+	if (bits > 0)
+		return 1 << bits;
+	else
+		return 1;
 }
 
 /*
diff --git a/fs/jbd2/journal.c b/fs/jbd2/journal.c
index ff07bff..eb070ca 100644
--- a/fs/jbd2/journal.c
+++ b/fs/jbd2/journal.c
@@ -1603,7 +1603,12 @@ void jbd2_journal_ack_err(journal_t *journal)
 
 int jbd2_journal_blocks_per_page(struct inode *inode)
 {
-	return 1 << (PAGE_CACHE_SHIFT - inode->i_sb->s_blocksize_bits);
+	int bits = PAGE_CACHE_SHIFT - inode->i_sb->s_blocksize_bits;
+
+	if (bits > 0)
+		return 1 << bits;
+	else
+		return 1;
 }
 
 /*
