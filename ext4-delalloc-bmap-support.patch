ext4: Fix ext4_bmap to flush the data to the disk with delalloc

From: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>

With delalloc we don't do block allocation in the write_begin/write_end.
So when using bmap we first need to flush data to the disk so that blocks
get allocated and then call generic_block_bmap.

Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Signed-off-by: Mingming Cao <cmm@us.ibm.com>
---

 fs/ext4/inode.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)


Index: linux-2.6.26-rc6/fs/ext4/inode.c
===================================================================
--- linux-2.6.26-rc6.orig/fs/ext4/inode.c	2008-06-20 15:01:47.000000000 -0700
+++ linux-2.6.26-rc6/fs/ext4/inode.c	2008-06-20 15:02:04.000000000 -0700
@@ -1628,6 +1628,16 @@ static sector_t ext4_bmap(struct address
 	journal_t *journal;
 	int err;
 
+	if (mapping_tagged(mapping, PAGECACHE_TAG_DIRTY) &&
+			test_opt(inode->i_sb, DELALLOC)) {
+		/*
+		 * With delalloc we want to sync the file
+		 * so that we can make sure we allocate
+		 * blocks for file
+		 */
+		filemap_write_and_wait(mapping);
+	}
+
 	if (EXT4_I(inode)->i_state & EXT4_STATE_JDATA) {
 		/*
 		 * This is a REALLY heavyweight approach, but the use of
