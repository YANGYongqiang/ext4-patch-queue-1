Ext4: Fix online resize block group descriptor corruption

From: Frederic Bohe <frederic.bohe@bull.net>

This is the patch for the group descriptor table corruption during
online resize pointed out by Theodore Tso.
The issue was due to the ext4 group descriptor which can be either
32 or 64 bytes long.
Only the 64 bytes structure was taken into account.t. 

We have tried both physical hard disk drive and loop back devices.
We have tested several filesystem resize with few (adding 1 group) to
many (adding 250 groups) more groups. All give correct group descriptors
using dump2fs and no problem when writing files and unmounting
filesystems.

This is a typical test case:

mkfs.ext4 -E test_fs -O ^flex_bg /dev/sdc1 10M
mount -t ext4dev -o nomballoc /dev/sdc1 /mnt/test
dumpe2fs /dev/sdc1
resize2fs /dev/sdc1 100M
dumpe2fs /dev/sdc1
dd if=/dev/urandom of=/mnt/test/data bs=95M count=1
umount /mnt/test
fsck.ext4 -f /dev/sdc1

This test being run for several sizes of filesystem (from 10M with 1K
blocks to 1G with 4K blocks).

Signed-off-by: Frederic Bohe <frederic.bohe@bull.net>
Signed-off-by: Mingming Cao <cmm@us.ibm.com>
---
 fs/ext4/resize.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

Index: linux-2.6.26-rc6/fs/ext4/resize.c
===================================================================
--- linux-2.6.26-rc6.orig/fs/ext4/resize.c	2008-06-17 10:43:22.000000000 -0700
+++ linux-2.6.26-rc6/fs/ext4/resize.c	2008-06-17 10:43:22.000000000 -0700
@@ -855,7 +855,8 @@ int ext4_group_add(struct super_block *s
 	 */
 
 	/* Update group descriptor block for new group */
-	gdp = (struct ext4_group_desc *)primary->b_data + gdb_off;
+	gdp = (struct ext4_group_desc *)((char *)primary->b_data +
+					 gdb_off * EXT4_DESC_SIZE(sb));
 
 	ext4_block_bitmap_set(sb, gdp, input->block_bitmap); /* LV FIXME */
 	ext4_inode_bitmap_set(sb, gdp, input->inode_bitmap); /* LV FIXME */
