ext4: old block reservation fix

From: Mingming Cao <cmm@us.ibm.com>

Old ext3 block reservation will try to satisfy block allocation in the
goal block group first even if there is not enough free blocks left in
 that group to make a large block reservation. In that case the current code
turns off block reservation for allocation in that block group. However if
the goal block group has no free blocks, the current code continue searching
and allocating blocks from the rest of block group, with block reservation
off, which is not the intend.

This patch fixed this.

Signed-off-by: Mingming Cao <cmm@us.ibm.com>
---
 fs/ext4/balloc.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

Index: linux-2.6.27-rc3/fs/ext4/balloc.c
===================================================================
--- linux-2.6.27-rc3.orig/fs/ext4/balloc.c	2008-08-28 13:02:23.000000000 -0700
+++ linux-2.6.27-rc3/fs/ext4/balloc.c	2008-08-28 13:02:40.000000000 -0700
@@ -1737,6 +1737,7 @@
 	struct ext4_super_block *es;
 	struct ext4_sb_info *sbi;
 	struct ext4_reserve_window_node *my_rsv = NULL;
+	struct ext4_reserve_window_node *orig_rsv= NULL;
 	struct ext4_block_alloc_info *block_i;
 	unsigned short windowsz = 0;
 	ext4_group_t ngroups;
@@ -1807,8 +1808,10 @@
 	 * turn off reservation for this allocation
 	 */
 	if (my_rsv && (free_blocks < windowsz)
-		&& (rsv_is_empty(&my_rsv->rsv_window)))
+		&& (rsv_is_empty(&my_rsv->rsv_window))) {
+		orig_rsv = my_rsv;
 		my_rsv = NULL;
+	}
 
 	if (free_blocks > 0) {
 		bitmap_bh = ext4_read_block_bitmap(sb, group_no);
@@ -1823,6 +1826,7 @@
 			goto allocated;
 	}
 
+	my_rsv = orig_rsv;
 	ngroups = EXT4_SB(sb)->s_groups_count;
 	smp_rmb();
 
