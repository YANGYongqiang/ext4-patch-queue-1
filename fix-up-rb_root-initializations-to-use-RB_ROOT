ext4: fix up rb_root initializations to use RB_ROOT

From: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>

ext4 uses rb_node = NULL; to zero rb_root at few places.  Using
RB_ROOT as the initializer is more portable in case the underlying
implementation of rbtrees changes in the future.

Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
Cc: Eric Paris <eparis@redhat.com>
---

 fs/ext4/block_validity.c |    4 ++--
 fs/ext4/dir.c            |    2 +-
 fs/ext4/mballoc.c        |    2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff -puN fs/ext4/block_validity.c~ext4-fixup-rb_root-initializations-to-use-rb_root fs/ext4/block_validity.c
--- a/fs/ext4/block_validity.c~ext4-fixup-rb_root-initializations-to-use-rb_root
+++ a/fs/ext4/block_validity.c
@@ -205,14 +205,14 @@ void ext4_release_system_zone(struct sup
 		entry = rb_entry(n, struct ext4_system_zone, node);
 		kmem_cache_free(ext4_system_zone_cachep, entry);
 		if (!parent)
-			EXT4_SB(sb)->system_blks.rb_node = NULL;
+			EXT4_SB(sb)->system_blks = RB_ROOT;
 		else if (parent->rb_left == n)
 			parent->rb_left = NULL;
 		else if (parent->rb_right == n)
 			parent->rb_right = NULL;
 		n = parent;
 	}
-	EXT4_SB(sb)->system_blks.rb_node = NULL;
+	EXT4_SB(sb)->system_blks = RB_ROOT;
 }
 
 /*
diff -puN fs/ext4/dir.c~ext4-fixup-rb_root-initializations-to-use-rb_root fs/ext4/dir.c
--- a/fs/ext4/dir.c~ext4-fixup-rb_root-initializations-to-use-rb_root
+++ a/fs/ext4/dir.c
@@ -303,7 +303,7 @@ static void free_rb_tree_fname(struct rb
 			kfree(old);
 		}
 		if (!parent)
-			root->rb_node = NULL;
+			*root = RB_ROOT;
 		else if (parent->rb_left == n)
 			parent->rb_left = NULL;
 		else if (parent->rb_right == n)
diff -puN fs/ext4/mballoc.c~ext4-fixup-rb_root-initializations-to-use-rb_root fs/ext4/mballoc.c
--- a/fs/ext4/mballoc.c~ext4-fixup-rb_root-initializations-to-use-rb_root
+++ a/fs/ext4/mballoc.c
@@ -2256,7 +2256,7 @@ int ext4_mb_add_groupinfo(struct super_b
 
 	INIT_LIST_HEAD(&meta_group_info[i]->bb_prealloc_list);
 	init_rwsem(&meta_group_info[i]->alloc_sem);
-	meta_group_info[i]->bb_free_root.rb_node = NULL;
+	meta_group_info[i]->bb_free_root = RB_ROOT;
 
 #ifdef DOUBLE_CHECK
 	{
_

Patches currently in -mm which might be from venkatesh.pallipadi@intel.com are

origin.patch
linux-next.patch
arch-x86-kernel-hpetc-fix-bug-in-rtc-emulation.patch
ext4-fixup-rb_root-initializations-to-use-rb_root.patch
ext3-fixup-rb_root-initializations-to-use-rb_root.patch
jffs2-fixup-rb_root-initializations-to-use-rb_root.patch


