From: David Howells <dhowells@redhat.com>

Introduce a function to register failure in an inode construction path.  This
includes marking the inode under construction as bad, unlocking it and
releasing it.

Signed-off-by: David Howells <dhowells@redhat.com>
Acked-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 Documentation/filesystems/porting |   18 +++++++++++++-----
 fs/bad_inode.c                    |   14 ++++++++++++++
 include/linux/fs.h                |    1 +
 3 files changed, 28 insertions(+), 5 deletions(-)

diff -puN Documentation/filesystems/porting~iget-introduce-a-function-to-register-iget-failure Documentation/filesystems/porting
--- a/Documentation/filesystems/porting~iget-introduce-a-function-to-register-iget-failure
+++ a/Documentation/filesystems/porting
@@ -184,11 +184,19 @@ just takes the superblock and inode numb
 test and set for you.
 
 e.g.
-       inode = iget_locked(sb, ino);
-       if (inode->i_state & I_NEW) {
-               read_inode_from_disk(inode);
-               unlock_new_inode(inode);
-       }
+	inode = iget_locked(sb, ino);
+	if (inode->i_state & I_NEW) {
+		err = read_inode_from_disk(inode);
+		if (err < 0) {
+			iget_failed(inode);
+			return err;
+		}
+		unlock_new_inode(inode);
+	}
+
+Note that if the process of setting up a new inode fails, then iget_failed()
+should be called on the inode to render it dead, and an appropriate error
+should be passed back to the caller.
 
 ---
 [recommended]
diff -puN fs/bad_inode.c~iget-introduce-a-function-to-register-iget-failure fs/bad_inode.c
--- a/fs/bad_inode.c~iget-introduce-a-function-to-register-iget-failure
+++ a/fs/bad_inode.c
@@ -359,3 +359,17 @@ int is_bad_inode(struct inode *inode)
 }
 
 EXPORT_SYMBOL(is_bad_inode);
+
+/**
+ * iget_failed - Mark an under-construction inode as dead and release it
+ * @inode: The inode to discard
+ *
+ * Mark an under-construction inode as dead and release it.
+ */
+void iget_failed(struct inode *inode)
+{
+	make_bad_inode(inode);
+	unlock_new_inode(inode);
+	iput(inode);
+}
+EXPORT_SYMBOL(iget_failed);
diff -puN include/linux/fs.h~iget-introduce-a-function-to-register-iget-failure include/linux/fs.h
--- a/include/linux/fs.h~iget-introduce-a-function-to-register-iget-failure
+++ a/include/linux/fs.h
@@ -1782,6 +1782,7 @@ static inline struct inode *iget(struct 
 }
 
 extern void __iget(struct inode * inode);
+extern void iget_failed(struct inode *);
 extern void clear_inode(struct inode *);
 extern void destroy_inode(struct inode *);
 extern struct inode *new_inode(struct super_block *);
_
