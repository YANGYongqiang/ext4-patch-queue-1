ext4: Add new "development flag" to the ext4 filesystem
From: Theodore Tso <tytso@MIT.EDU>
This flag is simply a generic "this is a
crash/burn test filesystem" marker.  If it is set, then filesystem
code which is "in development" will be allowed to mount the
filesystem.  Filesystem code which is not considered ready for
prime-time will check for this flag, and if it is not set, it will
refuse to touch the filesystem.

As we start rolling ext4 out to distro's like Fedora, et. al, this
makes it less likely that a user might accidentally start using ext4
on a production filesystem; a bad thing, since that will essentially
make it be unfsckable until e2fsprogs catches up.

Signed-off-by: Theodore Tso <tytso@MIT.EDU>
Signed-off-by: Mingming Cao<cmm@us.ibm.com>

---
 fs/ext4/super.c         |   11 +++++++++++
 include/linux/ext4_fs.h |    7 +++++++
 2 files changed, 18 insertions(+)

Index: linux-2.6.24/fs/ext4/super.c
===================================================================
--- linux-2.6.24.orig/fs/ext4/super.c	2008-02-08 12:07:00.000000000 -0800
+++ linux-2.6.24/fs/ext4/super.c	2008-02-08 13:42:30.000000000 -0800
@@ -1925,6 +1925,17 @@ static int ext4_fill_super (struct super
 		printk(KERN_WARNING
 		       "EXT4-fs warning: feature flags set on rev 0 fs, "
 		       "running e2fsck is recommended\n");
+
+	/*
+	 * Since ext4 is still considered development code, we require
+	 * that the TEST_FILESYS flag in s->flags be set.
+	 */
+	if (!(le32_to_cpu(es->s_flags) & EXT2_FLAGS_TEST_FILESYS)) {
+		printk(KERN_WARNING "EXT4-fs: %s: not marked "
+		       "OK to use with test code.\n", sb->s_id);
+		goto failed_mount;
+	}
+
 	/*
 	 * Check feature flags regardless of the revision level, since we
 	 * previously didn't change the revision level when setting the flags,
Index: linux-2.6.24/include/linux/ext4_fs.h
===================================================================
--- linux-2.6.24.orig/include/linux/ext4_fs.h	2008-02-08 12:07:00.000000000 -0800
+++ linux-2.6.24/include/linux/ext4_fs.h	2008-02-08 13:45:52.000000000 -0800
@@ -490,6 +490,13 @@ do {									       \
 #define	EXT4_ORPHAN_FS			0x0004	/* Orphans being recovered */
 
 /*
+ * Misc. filesystem flags
+ */
+#define EXT2_FLAGS_SIGNED_HASH		0x0001  /* Signed dirhash in use */
+#define EXT2_FLAGS_UNSIGNED_HASH	0x0002  /* Unsigned dirhash in use */
+#define EXT2_FLAGS_TEST_FILESYS		0x0004	/* to test development code */
+
+/*
  * Mount flags
  */
 #define EXT4_MOUNT_CHECK		0x00001	/* Do mount-time checks */
