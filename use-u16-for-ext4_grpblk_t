ext4: use __u16 for ext4_grpblk_t

The ext4_grpblk_t type is used for offsets relative to the beginning
of the block group.  So long as EXT4_MAX_BLOCK_SIZE is <= 65536, we
can use an __u16 type to save memory in a number of different data
structures; in particular, when we start using a rbtree to store free
extents instead of a bitmap.

Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
---
 fs/ext4/ext4.h    |    5 ++++-
 fs/ext4/mballoc.h |    2 +-
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/fs/ext4/ext4.h b/fs/ext4/ext4.h
index bab2387..753b9a6 100644
--- a/fs/ext4/ext4.h
+++ b/fs/ext4/ext4.h
@@ -66,7 +66,7 @@
 	ext4_error_file((file), __func__, __LINE__, (block), (fmt), ## a)
 
 /* data type for block offset of block group */
-typedef int ext4_grpblk_t;
+typedef __u16 ext4_grpblk_t;
 
 /* data type for filesystem-wide blocks number */
 typedef unsigned long long ext4_fsblk_t;
@@ -224,6 +224,9 @@ struct ext4_io_submit {
 
 /*
  * Macro-instructions used to manage several block sizes
+ *
+ * NOTE!  Don't try increasing EXT4_MAX_BLOCK_SIZE without checking
+ * ext4_grpblk_t, which is currently an unsigned 16 bit variable.
  */
 #define EXT4_MIN_BLOCK_SIZE		1024
 #define	EXT4_MAX_BLOCK_SIZE		65536
diff --git a/fs/ext4/mballoc.h b/fs/ext4/mballoc.h
index b619322..e437582 100644
--- a/fs/ext4/mballoc.h
+++ b/fs/ext4/mballoc.h
@@ -140,8 +140,8 @@ enum {
 struct ext4_free_extent {
 	ext4_lblk_t fe_logical;
 	ext4_grpblk_t fe_start;
-	ext4_group_t fe_group;
 	ext4_grpblk_t fe_len;
+	ext4_group_t fe_group;
 };
 
 /*
